<!DOCTYPE html>
<html>
    <head>
        <title><%=typeof title == 'undefined' ? 'LastPlay' : title%></title>

        <!-- Viewport mobile tag for sensible mobile support -->
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
        <script type="text/javascript" src="https://cdn.jsdelivr.net/clappr/latest/clappr.min.js"></script>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.1/angular-route.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js"></script>
                <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
        -->

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">
        <!--STYLES-->
        <link rel="stylesheet" href="/styles/bulma.min.css">
        <link rel="stylesheet" href="/styles/importer.css">
        <link rel="stylesheet" href="/styles/sweetalert.css">
        <!--STYLES END-->
    </head>


    <body ng-app="superfood">
        <nav class="nav has-shadow">
            <div style="margin-left:10px;" class="nav-left">
                <a href="/home">
                    <img style="width:147px" src="/images/logo.png">
                </a>
            </div>
            <div class="nav-center">
                <a ng-model="sport" class="nav-item" href="/baseball">
                    <span ng-model="sport" name="baseball" value="baseball" class="icon">
                        <i><img src="images/Baseball.png"/></i>
                    </span>
                </a>
                <a ng-model="sport" class="nav-item" href="/basketball">
                    <span ng-model="sport" name="basketball" value="basketball" class="icon">
                        <i><img src="images/Basketball.png"/></i>
                    </span>
                </a>
                <a ng-model="sport" class="nav-item" href="/hockey">
                    <span ng-model="sport" name="hockey" value="hockey" class="icon">
                        <i><img src="images/Hockey.png"/></i>
                    </span>
                </a>
                <!-- <a ng-model="sport" class="nav-item" href="/football">
                    <span ng-model="sport" name="football" value="football" class="icon">
                        <i><img src="images/Football.png"/></i>
                    </span>
                </a>
                <a ng-model="sport" class="nav-item" href="/wrestling">
                    <span ng-model="sport" name="wrestling" value="wrestling" class="icon">
                        <i><img src="images/Wrestling.png"/></i>
                    </span>
                </a ng-model="sport">
                <a class="nav-item" href="/boxing">
                    <span ng-model="sport" name="boxing" value="boxing" class="icon">
                        <i><img src="images/Boxing.png"/></i>
                    </span>
                </a> -->
            </div>

            <span class="nav-toggle">
                <span></span>
                <span></span>
                <span></span>
            </span>

            <div class="nav-right nav-menu">
                <a class="nav-item" href="/home">
                    Home
                </a>
                <a class="nav-item" href="/contact">
                    Contact
                </a>

                <span class="nav-item">
                    <a class="button" >
                        <span class="icon">
                            <i class="fa fa-twitter"></i>
                        </span>
                        <span>Tweet</span>
                    </a>
                    <a class="button is-success" href="/news">
                        <span class="icon">
                            <i class="fa fa-thumbs-up"></i>
                        </span>
                        <span>Newsletter</span>
                    </a>
                </span>
            </div>
        </nav>



        <%- body %>





        <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
            -->

          <!--TEMPLATES-->
          
          <!--TEMPLATES END-->


          <!--

          Client-side Javascript
          ========================

          You can always bring in JS files manually with `script` tags, or asynchronously
          on the client using a solution like AMD (RequireJS).  Or, if you like, you can
          take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

          By default, files in your `assets/js` folder are included here
          automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
          CoffeeScript (.coffee) are supported. In production, your scripts will be minified
          and concatenated into a single file.

          To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
          For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

      -->


      <!--SCRIPTS-->
      <script src="/js/dependencies/sails.io.js"></script>
      <script src="/js/dependencies/hls.js"></script>
      <script src="/js/dependencies/sweetalert.min.js"></script>
      <script src="/js/ang.js"></script>
      <script src="/js/contact.js"></script>
      <script src="/js/game.js"></script>
      <script src="/js/home.js"></script>
      <script src="/js/login.js"></script>
      <script src="/js/profile.js"></script>
      <script src="/js/register.js"></script>
      <script src="/js/sweetalert.min.js"></script>
      <!--SCRIPTS END-->
    </body>

        <!-- <div ng-controller="home" style="margin-top:100px" class="container">
            <table class="table is-bordered is-striped is-narrow">
                <thead>
                    <tr>
                        <th style="width:150px;text-align: center">Sport</th>
                        <th style="text-align: center" style="width:600px">Live Event</th>
                        <th style="width:150px;text-align: center">Time</th>
                        <!-- <th style="text-align: center" >Score</th> -->
                        <!-- <th>Link</th> -->
                    <!-- </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="game in allgames">
                        <td style="text-align: center" ><i style="width:20px"><img ng-src='{{game.pic}}'/></i>  {{game.sport}}</td>
                        <td style="text-align: center"> {{game.away}} @ {{game.home}}</td>
                        <td style="text-align: center">{{game.time}}</td> -->
                        <!-- <td style="text-align: center">0-0</td> -->
                        <!-- <td class="is-link is-icon">
                            <a href="/heat">
                               <i class="fa fa-link"></i>
                            </a>
                        </td> -->
                    <!-- </tr>
                </tbody>
            </table>
       </div> --> 
</html>
